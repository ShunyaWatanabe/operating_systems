#include "remove.h"
using namespace std;
int main(int argc, char** argv) {
	int arr [] = 
		{
	53477393,   53444624,   53411855,   53379086,   53346317,   53313548,
 53510162,     53248011,   53215242,   53182473,   53084168,   53051399,   52920326,   52625413,   46366723,   52592644,   		

54067228 , 
54525981  , 
54591518   ,
54657055 ,
54689824,
43974689 ,  
44072994  , 
44138531   ,
44171300  ,
44236837  ,
44302374  ,
54722599 ,
55377960 ,
55345193  ,
55607338   ,                                         
55672875    ,                                        
55869484     ,                                       
56328237      ,                                      
58392622       ,                                     
57835567        ,                                    
57868336         ,                                   
58032177          ,                                  
58163250           ,                                 
58196019            ,                                
58294324             ,                               
58327093              ,                              
59277366               ,                             
59310135                ,                            
59342904                 ,                           
59375673                  ,                          
59441210                   ,                         
59473979                    ,                        
59572284                     ,                       
59605053                      ,                      
59637822                       ,                     
59670591                        ,                    
59736128                         ,                   
59768897                          ,                  
59801666                     ,


	54034459,   54001690,   543647001,   3968920,   43548695,   43515926,   53706773,   53674004,   53608467   	}
;	for (int i=0; i<sizeof(arr)/sizeof(int); i++){
	int id = arr[i];
	if (shmctl(id, IPC_RMID, 0) == -1){
		cerr<<"Failed to detach memory segment"<<endl;
	}
	}
}

